[Scia Reto](https://sciareto.org) mind map   
> __version__=`1.1`,generatorId=`com.igormaznitsa:scia-reto:sciareto-1.6.3`,showJumps=`true`
---

# Spring Boot with ReactJS

## Project setup

### Create Spring Boot project
- NOTE
<pre>or use https://start.spring.io/</pre>

#### Dependencies

##### Spring Reactive Web

##### Spring Boot Dev tools

##### Spring Configuration Processor

#### Cleanup build\.gradle
> collapsed=`true`


##### Add lombok plugin \(optional\)
- NOTE
<pre>    id 'io.freefair.lombok' version '8.1.0'
</pre>

##### Configure test extension instead of task
- NOTE
<pre>test {
    useJUnitPlatform()
}
</pre>

##### Remove compileOnly declaration
- NOTE
<pre>Remove:

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
</pre>

### Add ReactJS module
> collapsed=`true`

- NOTE
<pre>Or from CLI

cd src/main
npx create-react-app ui</pre>

#### In project structure
> collapsed=`true`


##### Add new module
> collapsed=`true`


###### React generator
> collapsed=`true`


####### Location = src/main

####### Name = ui

####### Project type = React

####### Choose installed NodeJS

#### Add proxy config In src/main/ui/package\.json
- NOTE
<pre>&quot;proxy&quot;: &quot;http://localhost:8080&quot;</pre>

### Add NodeJS support
> collapsed=`true`


#### Add node\-gradle plugin
- NOTE
<pre>    // https://github.com/node-gradle/gradle-node-plugin
    id &quot;com.github.node-gradle.node&quot; version '3.5.1'
</pre>

#### Declare common variables
> collapsed=`true`

- NOTE
<pre>def uiSrcDir = layout.projectDirectory.dir('src/main/ui')
def uiDestBuildDir = layout.buildDirectory.dir('ui')
</pre>

##### uiSrcDir
> collapsed=`true`


###### Points to \`src/main/ui\`

##### uiDestBuildDir
> collapsed=`true`


###### Ends up under \`build\`

#### Configure node extension
> collapsed=`true`

- NOTE
<pre>node {
    download = findProperty('downloadNode') as boolean
    version = '18.16.1'
    nodeProjectDir.set(uiSrcDir)
}
</pre>

##### Set nodeProjectDir
> collapsed=`true`


###### Use \`set\` method since uiSrcDir is provider
> mmd.emoticon=`lightbulb`


#### Create extra tasks
> collapsed=`true`


##### reactTest
> collapsed=`true`

- NOTE
<pre>tasks.register('reactTest', NpmTask) {
    dependsOn 'npmInstall'
    args = ['run', 'test']
}
</pre>

###### Runs the \`test\` script declared in package\.json

##### reactBuild
> collapsed=`true`

- NOTE
<pre>tasks.register('reactBuild', NpmTask) {
    dependsOn 'npmInstall'
    inputs.files(uiSrcDir.file('package.json'), uiSrcDir.file('package-lock.json'))
    inputs.dir(uiSrcDir.dir('src'))
    inputs.dir(uiSrcDir.dir('public'))
    outputs.dir(uiDestBuildDir)

    args = ['run', 'build']

    execOverrides {
        environment('BUILD_PATH', uiDestBuildDir.get().dir('static'))
    }
}
</pre>

###### Runs the \`build\` script declared in package\.json

###### Registers inputs/output with gradle to optimize incremental builds

###### Tells CRA build script build output location via \`BUILD\_PATH\`

#### Hook reactBuild task into bootJar task
> collapsed=`true`

- NOTE
<pre>tasks.named('bootJar') {
    dependsOn reactBuild

    classpath(uiDestBuildDir)
}
</pre>

##### Depends on reactBuild

##### Adds new ui build output to classpath

### Running/developing
> collapsed=`true`


#### Start Spring Boot app

#### Start ui
> collapsed=`true`


##### npm run start

## Docs
> collapsed=`true`


### Create React App \(CRA\)
- LINK
<pre>https://create-react-app.dev/</pre>

### Spring Boot Web Reactive
- LINK
<pre>https://docs.spring.io/spring-boot/docs/current/reference/html/web.html#web.reactive</pre>

### Spring Web Reactive
- LINK
<pre>https://docs.spring.io/spring-framework/reference/web-reactive.html</pre>
